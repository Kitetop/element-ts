$namespace: 'el';
$spans: 0,
1,
2,
3;

$--sm: 768px !default;
$--md: 992px !default;
$--lg: 1200px !default;
$--xl: 1920px !default;

$--breakpoints: ('xs' : (max-width: $--sm - 1),
    'sm' : (min-width: $--sm),
    'md' : (min-width: $--md),
    'lg' : (min-width: $--lg),
    'xl' : (min-width: $--xl));

@mixin b($block) {
    $B: $namespace + '-'+ $block !global;

    .#{$B} {
        @content
    }
}

;

/** 使用媒体查询确定样式 */
@mixin res($key, $map: $--breakpoints) {
    @if map-has-key($map, $key) {
        @media only screen and #{inspect(map-get($map, $key))} {
            @content;
        }
    }

    @else {
        @warn "Undefeined points: `#{$map}`";
    }
}

;

[class*="el-ts-col-"] {
    float: left;
    box-sizing: border-box;
}

@include b(ts-col) {
    @for $i from 0 to 24 {
        @if $i==0 {
            @at-root #{&}-#{$i} {
                display: none;
            }
        }

        @at-root #{&}-#{$i} {
            width: (1 / 24 * $i * 100) * 1%;
        }

        @at-root #{&}-offset-#{$i} {
            margin-left: (1 / 24 * $i * 100) * 1%;
        }

        @at-root #{&}-pull-#{$i} {
            position: relative;
            right: (1 / 24 * $i * 100) * 1%;
        }

        @at-root #{&}-push-#{$i} {
            position: relative;
            left: (1 / 24 * $i * 100) * 1%;
        }
    }
}

@mixin test($map: $--breakpoints) {
    @each $key, $val in $map {
        @include res($key);
    }
}

@include test() {
    $B: &;
    @at-root .#{$B} {
        display: inline;
    }
};

// @include res(xs) {
//     @for $i from 0 to 24 {
//         @if $i == 0 {
//             @include b(ts-col-xs) {
//                 @at-root #{&}-#{$i} {
//                     display: none;
//                 }
//             }
//         }
//         @include b(ts-col-xs) {
//             @at-root #{&}-#{$i} {
//                 width: (1 / 24 * $i * 100) * 1%;
//             }
//         }
//     }
// }

// @include res(xs) {
//     @for $i from 0 to 24 {
//         @if $i == 0 {
//             @include b(ts-col-xs) {
//                 @at-root #{&}-#{$i} {
//                     display: none;
//                 }
//             }
//         }
//         @include b(ts-col-xs) {
//             @at-root #{&}-#{$i} {
//                 width: (1 / 24 * $i * 100) * 1%;
//             }
//         }
//     }
// }

// @include res(xs) {
//     @for $i from 0 to 24 {
//         @if $i == 0 {
//             @include b(ts-col-xs) {
//                 @at-root #{&}-#{$i} {
//                     display: none;
//                 }
//             }
//         }
//         @include b(ts-col-xs) {
//             @at-root #{&}-#{$i} {
//                 width: (1 / 24 * $i * 100) * 1%;
//             }
//         }
//     }
// }

// @for $i from 0 through 24 {
//     .el-ts-col-#{$i} {
//         width: (1 / 24 * $i * 100) * 1%;
//     }
// }

//     .el-col-offset-#{$i} {
//         margin-left: (1 / 24 * $i * 100) * 1%;
//     }

//     .el-col-pull-#{$i} {
//         position: relative;
//         right: (1 / 24 * $i * 100) * 1%;
//     }

//     .el-col-push-#{$i} {
//         position: relative;
//         left: (1 / 24 * $i * 100) * 1%;
//     }
// }

// @include res(xs) {
//     .el-col-xs-0 {
//       display: none;
//     }
//     @for $i from 0 through 24 {
//       .el-col-xs-#{$i} {
//         width: (1 / 24 * $i * 100) * 1%;
//       }

//       .el-col-xs-offset-#{$i} {
//         margin-left: (1 / 24 * $i * 100) * 1%;
//       }

//       .el-col-xs-pull-#{$i} {
//         position: relative;
//         right: (1 / 24 * $i * 100) * 1%;
//       }

//       .el-col-xs-push-#{$i} {
//         position: relative;
//         left: (1 / 24 * $i * 100) * 1%;
//       }
//     }
//   }

// @mixin b($block) {
//     $B: $namespace + '-'+ $block !global;

//     .#{$B} {
//         @content
//     }
// }

// @include b(ts-col) {
//     width: 100px;
// }

// @each $span in $spans {
//     @if $span==0 {
//         @include b(ts-col-span) {
//             width: 10px;
//         }
//     }

//     @else {
//         @include b(ts-col-span + '-'+ $span) {
//             width: 10px;
//         }
//     }
// }
